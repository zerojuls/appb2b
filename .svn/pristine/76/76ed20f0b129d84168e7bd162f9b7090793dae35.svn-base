<?php

if (!defined('BASEPATH')) exit('No permitir el acceso directo al script');

class Pedido_m extends CI_Model{
    
    public function __construct(){
        parent::__construct();
    }
    // CAMBIO 02-04-14
    public function get_lista_categoria($idsucursal){
        $sql = "SELECT c.id_categoria,c.nombre,c.color
                FROM categoria c, corporativo_categoria cc, sucursal_categoria sc
                WHERE c.id_categoria=cc.id_categoria
                AND cc.id_corporativo_categoria=sc.id_corporativo_categoria
                AND id_sucursal=".$idsucursal;
        $query = $this->db->query($sql);
        return $query;
    }
    
    public function get_lista_producto($idcorporativo,$idcategoria){
        $sql = "SELECT DISTINCT(p.codigo) AS codigo,p.id_producto, CONCAT(p.nombre,' (',e.nombre,')') AS producto,
                e.nombre AS envase, u.nombre AS unidad, m.nombre AS marca, cp.precio AS precio
                FROM marca m, subcategoria s , subcategoria_producto sp, unidad u, envase e,
                producto p, cliente_producto cp, corporativo c
                WHERE m.id_marca=p.id_marca
                AND s.id_subcategoria=sp.id_subcategoria
                AND sp.id_producto=p.id_producto
                AND cp.id_unidad=u.id_unidad
                AND cp.id_envase=e.id_envase
                AND cp.id_producto=p.id_producto
                AND cp.id_cliente=c.id_cliente
                AND c.id_corporativo=$idcorporativo
                AND s.id_categoria=$idcategoria
                AND cp.estado='A'
                ORDER BY p.nombre";
        $query = $this->db->query($sql);
        return $query;
    }
    
    public function get_pedido() {
             $this->db->select('S.id_sucursal AS ID_SUCURSAL, C.id_cliente ID_CLIENTE, TI.nombre AS TIPO_IDENTIFICACION, C.documento AS DOCUMENTO, C.codigo_cliente AS CODIGO_CLIENTE, C.codigo_logistico AS CODIGO_LOGISTICO, C.nombre AS NOMBRE, C.direccion AS DIRECCION, D.nombre AS DISTRITO, C.referencia AS REFERENCIA');
             $this->db->from("cliente C");
             $this->db->join("tipo_identificacion TI "," C.id_tipo_identificacion = TI.id_tipo_identificacion","INNER" );
             $this->db->join("sucursal S ","C.id_cliente = S.id_cliente","INNER" );
             $this->db->join("distrito D ","C.id_distrito = D.id_distrito","INNER" );
             $this->db->where("C.estado","A");
             $consulta =  $this->db->get();
             foreach($consulta->result_array() as $fila)
                 echo json_encode($fila);
    }
    
    function get_producto_detalle($arrParam) {
        try {
            $arrResultado =  $this->db->query_sp('PRODUCTO_DETALLE_GET',$arrParam);
            return $arrResultado;
        } catch (Exception $e) {
            throw new Exception('Error Inesperado');
        }
    }
    
    function add_producto($arrParam) {
        try {
            $arrResultado = $this->db->query_sp('PRODUCTO_INSERT',$arrParam);
            return $arrResultado;
        } catch (Exception $e) {
            throw new Exception('Error Inesperado', 0, $e);
            return FALSE;
        }
    }
    
    function upd_producto($arrParam) {
        try {
            $arrResultado = $this->db->query_sp('PRODUCTO_UPDATE',$arrParam);
            return $arrResultado;
        } catch (Exception $e) {
            throw new Exception('Error Inesperado', 0, $e);
            return FALSE;
        }
    }
    
    function get_pedido_detalle($arrParam){
        try {
            $arrResultado =  $this->db->query_sp('PEDIDO_DETALLE_GET2',$arrParam);
            return $arrResultado;
        } catch (Exception $e) {
            throw new Exception('Error Inesperado');
        }
    }
    
    function confirm_pedido($arrParam) {
        try {
            $arrResultado = $this->db->query_sp('PEDIDO_CONFIRM',$arrParam);
            return $arrResultado;
        } catch (Exception $e) {
            throw new Exception('Error Inesperado', 0, $e);
            return FALSE;
        }
    }
    
    public function get_pedido_saldo(){
        $spName = 'PEDIDO_SALDO_GET';
        $arrParam = array(null);
        $result = $this->base_m->get_listar_json($spName, $arrParam);
        echo $result;
    }
    
    public function get_nombre_categoria($id){
        $sql = "SELECT nombre FROM categoria WHERE id_categoria=$id";
        $rs = $this->db->query($sql);
        $row = $rs->row();
        return $row->nombre;
    }
    
    public function montos_generales($id_sucursal,$id_categoria,$monto){
        try {
            $array = array('asignado'=>'1','minimo'=>'2','max_pedido'=>'3','fecha_cierre'=>'4');
            $idmonto = $array[$monto];
            $sql = "SELECT ccm.valor AS valor
                    FROM sucursal_categoria sc, corporativo_categoria cc, corporativo_categoria_monto ccm, monto m
                    WHERE sc.id_categoria
                    AND sc.id_categoria=cc.id_categoria
                    AND sc.id_corporativo_categoria=cc.id_corporativo_categoria
                    AND cc.id_corporativo_categoria=ccm.id_corporativo_categoria
                    AND ccm.id_monto=m.id_monto
                    AND sc.id_sucursal=$id_sucursal
                    AND sc.id_categoria=$id_categoria
                    AND m.id_monto=$idmonto";
            $rs = $this->db->query($sql);
            $row = $rs->row();
            return $row->valor;
        } catch (Exception $e) {
            throw new Exception('Error Inesperado');
        }
    }
    
    public function get_monto_acumulado($id_sucursal,$id_categoria){
        $sql = "SELECT monto_acumulado
                FROM sucursal_categoria
                WHERE id_sucursal=$id_sucursal
                AND id_categoria=$id_categoria";
        $rs = $this->db->query($sql);
        $row = $rs->row();
        return $row->monto_acumulado;
    }
    
    public function montos_pedido($arrParam){
        try {
            $arrResultado =  $this->db->query_sp('PEDIDO_MONTOS_GET',$arrParam);
            return $arrResultado;
        } catch (Exception $e) {
            throw new Exception('Error Inesperado');
        }
    }
    
    public function get_sucursales($arrParam){        
         $query = "SUCURSALES_GET";
         $arrCombo = $this->db->query_sp($query, $arrParam);
         $arrResultado = json_encode($arrCombo);
         return $arrResultado;
    }
       
}
